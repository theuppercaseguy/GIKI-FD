{"version":3,"names":["invariant","getScreenForRouteName","validateScreenOptions","applyConfig","configurer","navigationOptions","configProps","_objectSpread","routeConfigs","navigatorScreenConfig","navigation","screenProps","theme","state","route","routeName","Component","routeConfig","routeScreenConfig","componentScreenConfig","configOptions","outputConfig"],"sources":["createConfigGetter.js"],"sourcesContent":["import invariant from '../utils/invariant';\n\nimport getScreenForRouteName from './getScreenForRouteName';\nimport validateScreenOptions from './validateScreenOptions';\n\nfunction applyConfig(configurer, navigationOptions, configProps) {\n  if (typeof configurer === 'function') {\n    return {\n      ...navigationOptions,\n      ...configurer({\n        ...configProps,\n        navigationOptions,\n      }),\n    };\n  }\n  if (typeof configurer === 'object') {\n    return {\n      ...navigationOptions,\n      ...configurer,\n    };\n  }\n  return navigationOptions;\n}\n\nexport default (routeConfigs, navigatorScreenConfig) => (\n  navigation,\n  screenProps,\n  theme\n) => {\n  const { state } = navigation;\n  const route = state;\n\n  invariant(\n    route.routeName && typeof route.routeName === 'string',\n    'Cannot get config because the route does not have a routeName.'\n  );\n\n  const Component = getScreenForRouteName(routeConfigs, route.routeName);\n\n  const routeConfig = routeConfigs[route.routeName];\n\n  const routeScreenConfig =\n    routeConfig === Component ? null : routeConfig.navigationOptions;\n  const componentScreenConfig = Component.navigationOptions;\n\n  const configOptions = { navigation, screenProps: screenProps || {}, theme };\n\n  let outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);\n  outputConfig = applyConfig(\n    componentScreenConfig,\n    outputConfig,\n    configOptions\n  );\n  outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);\n\n  validateScreenOptions(outputConfig, route);\n\n  return outputConfig;\n};\n"],"mappings":"+DAAA,MAAO,CAAAA,SAAS,KAAM,oBAAoB,CAE1C,MAAO,CAAAC,qBAAqB,KAAM,yBAAyB,CAC3D,MAAO,CAAAC,qBAAqB,KAAM,yBAAyB,CAE3D,QAAS,CAAAC,WAAWA,CAACC,UAAU,CAAEC,iBAAiB,CAAEC,WAAW,CAAE,CAC/D,GAAI,MAAO,CAAAF,UAAU,GAAK,UAAU,CAAE,CACpC,OAAAG,aAAA,IACKF,iBAAiB,CACjBD,UAAU,CAAAG,aAAA,IACRD,WAAW,EACdD,iBAAiB,CAAjBA,iBAAiB,EAClB,CAAC,EAEN,CACA,GAAI,MAAO,CAAAD,UAAU,GAAK,QAAQ,CAAE,CAClC,OAAAG,aAAA,IACKF,iBAAiB,CACjBD,UAAU,EAEjB,CACA,MAAO,CAAAC,iBAAiB,CAC1B,CAEA,eAAe,SAACG,YAAY,CAAEC,qBAAqB,QAAK,UACtDC,UAAU,CACVC,WAAW,CACXC,KAAK,CACF,IACK,CAAAC,KAAK,CAAKH,UAAU,CAApBG,KAAK,CACb,GAAM,CAAAC,KAAK,CAAGD,KAAK,CAEnBb,SAAS,CACPc,KAAK,CAACC,SAAS,EAAI,MAAO,CAAAD,KAAK,CAACC,SAAS,GAAK,QAAQ,CACtD,gEACF,CAAC,CAED,GAAM,CAAAC,SAAS,CAAGf,qBAAqB,CAACO,YAAY,CAAEM,KAAK,CAACC,SAAS,CAAC,CAEtE,GAAM,CAAAE,WAAW,CAAGT,YAAY,CAACM,KAAK,CAACC,SAAS,CAAC,CAEjD,GAAM,CAAAG,iBAAiB,CACrBD,WAAW,GAAKD,SAAS,CAAG,IAAI,CAAGC,WAAW,CAACZ,iBAAiB,CAClE,GAAM,CAAAc,qBAAqB,CAAGH,SAAS,CAACX,iBAAiB,CAEzD,GAAM,CAAAe,aAAa,CAAG,CAAEV,UAAU,CAAVA,UAAU,CAAEC,WAAW,CAAEA,WAAW,EAAI,CAAC,CAAC,CAAEC,KAAK,CAALA,KAAM,CAAC,CAE3E,GAAI,CAAAS,YAAY,CAAGlB,WAAW,CAACM,qBAAqB,CAAE,CAAC,CAAC,CAAEW,aAAa,CAAC,CACxEC,YAAY,CAAGlB,WAAW,CACxBgB,qBAAqB,CACrBE,YAAY,CACZD,aACF,CAAC,CACDC,YAAY,CAAGlB,WAAW,CAACe,iBAAiB,CAAEG,YAAY,CAAED,aAAa,CAAC,CAE1ElB,qBAAqB,CAACmB,YAAY,CAAEP,KAAK,CAAC,CAE1C,MAAO,CAAAO,YAAY,CACrB,CAAC"}