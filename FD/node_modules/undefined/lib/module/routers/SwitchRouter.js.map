{"version":3,"names":["invariant","getScreenForRouteName","createConfigGetter","NavigationActions","SwitchActions","StackActions","validateRouteConfigMap","createPathParser","defaultActionCreators","routeConfigs","config","arguments","length","undefined","order","Object","keys","getCustomActionCreators","initialRouteParams","initialRouteName","backBehavior","resetOnBlur","hasOwnProperty","initialRouteIndex","indexOf","Error","map","n","join","childRouters","forEach","routeName","screen","router","getParamsForRoute","params","routeConfig","_objectSpread","_createPathParser","getPathAndParamsForRoute","getActionForPathAndParams","resetChildRoute","initialParams","childRouter","childAction","init","getStateForAction","key","getNextState","action","prevState","possibleNextState","updateNextStateHistory","nextState","index","nextRouteKeyHistory","routeKeyHistory","type","NAVIGATE","_toConsumableArray","keyToAdd","routes","filter","k","push","BACK","pop","prevRouteName","nextRoutes","getInitialState","initialState","isTransitioning","initialKey","getActionCreators","route","stateKey","inputState","state","activeChildIndex","INIT","JUMP_TO","findIndex","i","activeChildLastState","activeChildRouter","activeChildState","isBackEligible","Math","max","routeKey","didNavigate","find","childId","childState","newChildState","childStateUpdate","SET_PARAMS","lastRoute","isActionBackOrPop","POP","POP_TO_TOP","sendActionToInactiveChildren","preserveFocus","getComponentForState","getComponentForRouteName","getPathAndParamsForState","path","getScreenOptions","defaultNavigationOptions"],"sources":["SwitchRouter.js"],"sourcesContent":["import invariant from '../utils/invariant';\nimport getScreenForRouteName from './getScreenForRouteName';\nimport createConfigGetter from './createConfigGetter';\n\nimport * as NavigationActions from '../NavigationActions';\nimport * as SwitchActions from './SwitchActions';\nimport * as StackActions from './StackActions';\nimport validateRouteConfigMap from './validateRouteConfigMap';\nimport { createPathParser } from './pathUtils';\n\nconst defaultActionCreators = () => ({});\n\nexport default (routeConfigs, config = {}) => {\n  // Fail fast on invalid route definitions\n  validateRouteConfigMap(routeConfigs);\n\n  const order = config.order || Object.keys(routeConfigs);\n\n  const getCustomActionCreators =\n    config.getCustomActionCreators || defaultActionCreators;\n\n  const initialRouteParams = config.initialRouteParams;\n  const initialRouteName = config.initialRouteName || order[0];\n  const backBehavior = config.backBehavior || 'none';\n  const resetOnBlur = config.hasOwnProperty('resetOnBlur')\n    ? config.resetOnBlur\n    : true;\n\n  const initialRouteIndex = order.indexOf(initialRouteName);\n  if (initialRouteIndex === -1) {\n    throw new Error(\n      `Invalid initialRouteName '${initialRouteName}'.` +\n        `Should be one of ${order.map(n => `\"${n}\"`).join(', ')}`\n    );\n  }\n\n  const childRouters = {};\n  order.forEach(routeName => {\n    childRouters[routeName] = null;\n    const screen = getScreenForRouteName(routeConfigs, routeName);\n    if (screen.router) {\n      childRouters[routeName] = screen.router;\n    }\n  });\n\n  function getParamsForRoute(routeName, params) {\n    let routeConfig = routeConfigs[routeName];\n    if (routeConfig && routeConfig.params) {\n      return { ...routeConfig.params, ...params };\n    } else {\n      return params;\n    }\n  }\n\n  const {\n    getPathAndParamsForRoute,\n    getActionForPathAndParams,\n  } = createPathParser(childRouters, routeConfigs, config);\n\n  function resetChildRoute(routeName) {\n    let initialParams =\n      routeName === initialRouteName ? initialRouteParams : undefined;\n    // note(brentvatne): merging initialRouteParams *on top* of default params\n    // on the route seems incorrect but it's consistent with existing behavior\n    // in stackrouter\n    let params = getParamsForRoute(routeName, initialParams);\n    const childRouter = childRouters[routeName];\n    if (childRouter) {\n      const childAction = NavigationActions.init();\n      return {\n        ...childRouter.getStateForAction(childAction),\n        key: routeName,\n        routeName,\n        params,\n      };\n    }\n    return {\n      key: routeName,\n      routeName,\n      params,\n    };\n  }\n\n  function getNextState(action, prevState, possibleNextState) {\n    function updateNextStateHistory(prevState, nextState) {\n      if (\n        backBehavior !== 'history' ||\n        (prevState && nextState && nextState.index === prevState.index)\n      ) {\n        return nextState;\n      }\n      let nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];\n      if (action.type === NavigationActions.NAVIGATE) {\n        nextRouteKeyHistory = [...nextRouteKeyHistory]; // copy\n        const keyToAdd = nextState.routes[nextState.index].key;\n        nextRouteKeyHistory = nextRouteKeyHistory.filter(k => k !== keyToAdd); // dedup\n        nextRouteKeyHistory.push(keyToAdd);\n      } else if (action.type === NavigationActions.BACK) {\n        nextRouteKeyHistory = [...nextRouteKeyHistory]; // copy\n        nextRouteKeyHistory.pop();\n      }\n      return {\n        ...nextState,\n        routeKeyHistory: nextRouteKeyHistory,\n      };\n    }\n\n    let nextState = possibleNextState;\n    if (\n      prevState &&\n      possibleNextState &&\n      prevState.index !== possibleNextState.index &&\n      resetOnBlur\n    ) {\n      const prevRouteName = prevState.routes[prevState.index].routeName;\n      const nextRoutes = [...possibleNextState.routes];\n      nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n      nextState = {\n        ...possibleNextState,\n        routes: nextRoutes,\n      };\n    }\n    return updateNextStateHistory(prevState, nextState);\n  }\n\n  function getInitialState() {\n    const routes = order.map(resetChildRoute);\n    const initialState = {\n      routes,\n      index: initialRouteIndex,\n      isTransitioning: false,\n    };\n    if (backBehavior === 'history') {\n      const initialKey = routes[initialRouteIndex].key;\n      initialState['routeKeyHistory'] = [initialKey];\n    }\n    return initialState;\n  }\n\n  return {\n    childRouters,\n\n    getActionCreators(route, stateKey) {\n      return getCustomActionCreators(route, stateKey);\n    },\n\n    getStateForAction(action, inputState) {\n      let prevState = inputState ? { ...inputState } : inputState;\n      let state = inputState || getInitialState();\n      let activeChildIndex = state.index;\n\n      if (action.type === NavigationActions.INIT) {\n        // NOTE(brentvatne): this seems weird... why are we merging these\n        // params into child routes?\n        // ---------------------------------------------------------------\n        // Merge any params from the action into all the child routes\n        const { params } = action;\n        if (params) {\n          state.routes = state.routes.map(route => ({\n            ...route,\n            params: {\n              ...route.params,\n              ...params,\n              ...(route.routeName === initialRouteName\n                ? initialRouteParams\n                : null),\n            },\n          }));\n        }\n      }\n\n      if (\n        action.type === SwitchActions.JUMP_TO &&\n        (action.key == null || action.key === state.key)\n      ) {\n        const { params } = action;\n        const index = state.routes.findIndex(\n          route => route.routeName === action.routeName\n        );\n\n        if (index === -1) {\n          throw new Error(\n            `There is no route named '${\n              action.routeName\n            }' in the navigator with the key '${action.key}'.\\n` +\n              `Must be one of: ${state.routes\n                .map(route => `'${route.routeName}'`)\n                .join(',')}`\n          );\n        }\n\n        return getNextState(action, prevState, {\n          ...state,\n          routes: params\n            ? state.routes.map((route, i) =>\n                i === index\n                  ? {\n                      ...route,\n                      params: {\n                        ...route.params,\n                        ...params,\n                      },\n                    }\n                  : route\n              )\n            : state.routes,\n          index,\n        });\n      }\n\n      // Let the current child handle it\n      const activeChildLastState = state.routes[state.index];\n      const activeChildRouter = childRouters[order[state.index]];\n      if (activeChildRouter) {\n        const activeChildState = activeChildRouter.getStateForAction(\n          action,\n          activeChildLastState\n        );\n        if (!activeChildState && inputState) {\n          return null;\n        }\n        if (activeChildState && activeChildState !== activeChildLastState) {\n          const routes = [...state.routes];\n          routes[state.index] = activeChildState;\n          return getNextState(action, prevState, {\n            ...state,\n            routes,\n          });\n        }\n      }\n\n      // Handle tab changing. Do this after letting the current tab try to\n      // handle the action, to allow inner children to change first\n      const isBackEligible =\n        action.key == null || action.key === activeChildLastState.key;\n      if (action.type === NavigationActions.BACK) {\n        if (isBackEligible && backBehavior === 'initialRoute') {\n          activeChildIndex = initialRouteIndex;\n        } else if (isBackEligible && backBehavior === 'order') {\n          activeChildIndex = Math.max(0, activeChildIndex - 1);\n        }\n        // The history contains current route, so we can only go back\n        // if there is more than one item in the history\n        else if (\n          isBackEligible &&\n          backBehavior === 'history' &&\n          state.routeKeyHistory.length > 1\n        ) {\n          const routeKey =\n            state.routeKeyHistory[state.routeKeyHistory.length - 2];\n          activeChildIndex = order.indexOf(routeKey);\n        }\n      }\n\n      let didNavigate = false;\n      if (action.type === NavigationActions.NAVIGATE) {\n        didNavigate = !!order.find((childId, i) => {\n          if (childId === action.routeName) {\n            activeChildIndex = i;\n            return true;\n          }\n          return false;\n        });\n        if (didNavigate) {\n          const childState = state.routes[activeChildIndex];\n          const childRouter = childRouters[action.routeName];\n          let newChildState = childState;\n\n          if (action.action && childRouter) {\n            const childStateUpdate = childRouter.getStateForAction(\n              action.action,\n              childState\n            );\n            if (childStateUpdate) {\n              newChildState = childStateUpdate;\n            }\n          }\n\n          if (action.params) {\n            newChildState = {\n              ...newChildState,\n              params: {\n                ...(newChildState.params || {}),\n                ...action.params,\n              },\n            };\n          }\n\n          if (newChildState !== childState) {\n            const routes = [...state.routes];\n            routes[activeChildIndex] = newChildState;\n            const nextState = {\n              ...state,\n              routes,\n              index: activeChildIndex,\n            };\n            return getNextState(action, prevState, nextState);\n          } else if (\n            newChildState === childState &&\n            state.index === activeChildIndex &&\n            prevState\n          ) {\n            return null;\n          }\n        }\n      }\n\n      if (action.type === NavigationActions.SET_PARAMS) {\n        const key = action.key;\n        const lastRoute = state.routes.find(route => route.key === key);\n        if (lastRoute) {\n          const params = {\n            ...lastRoute.params,\n            ...action.params,\n          };\n          const routes = [...state.routes];\n          routes[state.routes.indexOf(lastRoute)] = {\n            ...lastRoute,\n            params,\n          };\n          return getNextState(action, prevState, {\n            ...state,\n            routes,\n          });\n        }\n      }\n\n      if (activeChildIndex !== state.index) {\n        return getNextState(action, prevState, {\n          ...state,\n          index: activeChildIndex,\n        });\n      } else if (didNavigate && !inputState) {\n        return state;\n      } else if (didNavigate) {\n        return { ...state };\n      }\n\n      const isActionBackOrPop =\n        action.type === NavigationActions.BACK ||\n        action.type === StackActions.POP ||\n        action.type === StackActions.POP_TO_TOP;\n      const sendActionToInactiveChildren =\n        !isActionBackOrPop ||\n        (action.type === NavigationActions.BACK && action.key != null);\n\n      // Let other children handle it and switch to the first child that returns a new state\n      // Do not do this for StackActions.POP or NavigationActions.BACK actions without a key:\n      // it would be unintuitive for these actions to switch to another tab just because that tab had a Stack that could accept a back action\n      if (sendActionToInactiveChildren) {\n        let index = state.index;\n        let routes = state.routes;\n        order.find((childId, i) => {\n          const childRouter = childRouters[childId];\n          if (i === index) {\n            return false;\n          }\n          let childState = routes[i];\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n          if (!childState) {\n            index = i;\n            return true;\n          }\n          if (childState !== routes[i]) {\n            routes = [...routes];\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n          return false;\n        });\n\n        // Nested routers can be updated after switching children with actions such as SET_PARAMS\n        // and COMPLETE_TRANSITION.\n        if (action.preserveFocus) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(action, prevState, {\n            ...state,\n            index,\n            routes,\n          });\n        }\n      }\n\n      return state;\n    },\n\n    getComponentForState(state) {\n      const routeName = state.routes[state.index].routeName;\n      invariant(\n        routeName,\n        `There is no route defined for index ${state.index}. Check that\n        that you passed in a navigation state with a valid tab/screen index.`\n      );\n      const childRouter = childRouters[routeName];\n      if (childRouter) {\n        return childRouter.getComponentForState(state.routes[state.index]);\n      }\n      return getScreenForRouteName(routeConfigs, routeName);\n    },\n\n    getComponentForRouteName(routeName) {\n      return getScreenForRouteName(routeConfigs, routeName);\n    },\n\n    getPathAndParamsForState(state) {\n      const route = state.routes[state.index];\n      return getPathAndParamsForRoute(route);\n    },\n\n    getActionForPathAndParams(path, params) {\n      return getActionForPathAndParams(path, params);\n    },\n\n    getScreenOptions: createConfigGetter(\n      routeConfigs,\n      config.defaultNavigationOptions\n    ),\n  };\n};\n"],"mappings":"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"}