{"version":3,"names":["getChildEventSubscriber","addListener","key","initialLastFocusEvent","arguments","length","undefined","actionSubscribers","Set","willFocusSubscribers","didFocusSubscribers","willBlurSubscribers","didBlurSubscribers","refocusSubscribers","removeAll","forEach","set","clear","upstreamSubscribers","subs","remove","getChildSubscribers","evtName","emit","type","payload","payloadWithType","_objectSpread2","default","subscribers","lastFocusEvent","upstreamEvents","map","eventName","state","lastState","action","lastRoutes","routes","focusKey","index","isChildFocused","lastRoute","find","route","newRoute","childPayload","context","isTransitioning","previouslylastFocusEvent","eventHandler","Error","add","delete","console","error"],"sources":["getChildEventSubscriber.js"],"sourcesContent":["/*\n * This is used to extract one children's worth of events from a stream of navigation action events\n *\n * Based on the 'action' events that get fired for this navigation state, this utility will fire\n * focus and blur events for this child\n */\nexport default function getChildEventSubscriber(\n  addListener,\n  key,\n  initialLastFocusEvent = 'didBlur'\n) {\n  const actionSubscribers = new Set();\n  const willFocusSubscribers = new Set();\n  const didFocusSubscribers = new Set();\n  const willBlurSubscribers = new Set();\n  const didBlurSubscribers = new Set();\n  const refocusSubscribers = new Set();\n\n  const removeAll = () => {\n    [\n      actionSubscribers,\n      willFocusSubscribers,\n      didFocusSubscribers,\n      willBlurSubscribers,\n      didBlurSubscribers,\n      refocusSubscribers,\n    ].forEach(set => set.clear());\n\n    upstreamSubscribers.forEach(subs => subs && subs.remove());\n  };\n\n  const getChildSubscribers = evtName => {\n    switch (evtName) {\n      case 'action':\n        return actionSubscribers;\n      case 'willFocus':\n        return willFocusSubscribers;\n      case 'didFocus':\n        return didFocusSubscribers;\n      case 'willBlur':\n        return willBlurSubscribers;\n      case 'didBlur':\n        return didBlurSubscribers;\n      case 'refocus':\n        return refocusSubscribers;\n      default:\n        return null;\n    }\n  };\n\n  const emit = (type, payload) => {\n    const payloadWithType = { ...payload, type };\n    const subscribers = getChildSubscribers(type);\n    subscribers &&\n      subscribers.forEach(subs => {\n        subs(payloadWithType);\n      });\n  };\n\n  // lastFocusEvent keeps track of focus state for one route. First we assume\n  // we are blurred. If we are focused on initialization, the first 'action'\n  // event will cause onFocus+willFocus events because we had previously been\n  // considered blurred\n  let lastFocusEvent = initialLastFocusEvent;\n\n  const upstreamEvents = [\n    'willFocus',\n    'didFocus',\n    'willBlur',\n    'didBlur',\n    'refocus',\n    'action',\n  ];\n\n  const upstreamSubscribers = upstreamEvents.map(eventName =>\n    addListener(eventName, payload => {\n      if (eventName === 'refocus') {\n        emit(eventName, payload);\n        return;\n      }\n\n      const { state, lastState, action } = payload;\n      const lastRoutes = lastState && lastState.routes;\n      const routes = state && state.routes;\n\n      // const lastFocusKey =\n      //   lastState && lastState.routes && lastState.routes[lastState.index].key;\n      const focusKey = routes && routes[state.index].key;\n\n      const isChildFocused = focusKey === key;\n      const lastRoute =\n        lastRoutes && lastRoutes.find(route => route.key === key);\n      const newRoute = routes && routes.find(route => route.key === key);\n      const childPayload = {\n        context: `${key}:${action.type}_${payload.context || 'Root'}`,\n        state: newRoute,\n        lastState: lastRoute,\n        action,\n        type: eventName,\n      };\n      const isTransitioning = !!state && state.isTransitioning;\n\n      const previouslylastFocusEvent = lastFocusEvent;\n\n      if (lastFocusEvent === 'didBlur') {\n        // The child is currently blurred. Look for willFocus conditions\n        if (eventName === 'willFocus' && isChildFocused) {\n          emit((lastFocusEvent = 'willFocus'), childPayload);\n        } else if (eventName === 'action' && isChildFocused) {\n          emit((lastFocusEvent = 'willFocus'), childPayload);\n        }\n      }\n      if (lastFocusEvent === 'willFocus') {\n        // We are currently mid-focus. Look for didFocus conditions.\n        // If state.isTransitioning is false, this child event happens immediately after willFocus\n        if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n          emit((lastFocusEvent = 'didFocus'), childPayload);\n        } else if (\n          eventName === 'action' &&\n          isChildFocused &&\n          !isTransitioning\n        ) {\n          emit((lastFocusEvent = 'didFocus'), childPayload);\n        }\n      }\n\n      if (lastFocusEvent === 'didFocus') {\n        // The child is currently focused. Look for blurring events\n        if (!isChildFocused) {\n          // The child is no longer focused within this navigation state\n          emit((lastFocusEvent = 'willBlur'), childPayload);\n        } else if (eventName === 'willBlur') {\n          // The parent is getting a willBlur event\n          emit((lastFocusEvent = 'willBlur'), childPayload);\n        } else if (\n          eventName === 'action' &&\n          previouslylastFocusEvent === 'didFocus'\n        ) {\n          // While focused, pass action events to children for grandchildren focus\n          emit('action', childPayload);\n        }\n      }\n\n      if (lastFocusEvent === 'willBlur') {\n        // The child is mid-blur. Wait for transition to end\n        if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n          // The child is done blurring because transitioning is over, or isTransitioning\n          // never began and didBlur fires immediately after willBlur\n          emit((lastFocusEvent = 'didBlur'), childPayload);\n        } else if (eventName === 'didBlur') {\n          // Pass through the parent didBlur event if it happens\n          emit((lastFocusEvent = 'didBlur'), childPayload);\n        } else if (\n          eventName === 'action' &&\n          isChildFocused &&\n          !isTransitioning\n        ) {\n          emit((lastFocusEvent = 'didFocus'), childPayload);\n        } else if (\n          eventName === 'action' &&\n          isChildFocused &&\n          isTransitioning\n        ) {\n          emit((lastFocusEvent = 'willFocus'), childPayload);\n        }\n      }\n\n      if (lastFocusEvent === 'didBlur' && !newRoute) {\n        removeAll();\n      }\n    })\n  );\n\n  return {\n    addListener(eventName, eventHandler) {\n      const subscribers = getChildSubscribers(eventName);\n      if (!subscribers) {\n        throw new Error(`Invalid event name \"${eventName}\"`);\n      }\n      subscribers.add(eventHandler);\n      const remove = () => {\n        subscribers.delete(eventHandler);\n      };\n      return { remove };\n    },\n    emit(eventName, payload) {\n      if (eventName !== 'refocus') {\n        console.error(\n          `navigation.emit only supports the 'refocus' event currently.`\n        );\n        return;\n      }\n      emit(eventName, payload);\n    },\n  };\n}\n"],"mappings":"8QAMe,QAAS,CAAAA,uBAAuBA,CAC7CC,WAAW,CACXC,GAAG,CAEH,IADA,CAAAC,qBAAqB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAEjC,GAAM,CAAAG,iBAAiB,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACnC,GAAM,CAAAC,oBAAoB,CAAG,GAAI,CAAAD,GAAG,CAAC,CAAC,CACtC,GAAM,CAAAE,mBAAmB,CAAG,GAAI,CAAAF,GAAG,CAAC,CAAC,CACrC,GAAM,CAAAG,mBAAmB,CAAG,GAAI,CAAAH,GAAG,CAAC,CAAC,CACrC,GAAM,CAAAI,kBAAkB,CAAG,GAAI,CAAAJ,GAAG,CAAC,CAAC,CACpC,GAAM,CAAAK,kBAAkB,CAAG,GAAI,CAAAL,GAAG,CAAC,CAAC,CAEpC,GAAM,CAAAM,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,CACEP,iBAAiB,CACjBE,oBAAoB,CACpBC,mBAAmB,CACnBC,mBAAmB,CACnBC,kBAAkB,CAClBC,kBAAkB,CACnB,CAACE,OAAO,CAAC,SAAAC,GAAG,QAAI,CAAAA,GAAG,CAACC,KAAK,CAAC,CAAC,GAAC,CAE7BC,mBAAmB,CAACH,OAAO,CAAC,SAAAI,IAAI,QAAI,CAAAA,IAAI,EAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,CAC5D,CAAC,CAED,GAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAGC,OAAO,CAAI,CACrC,OAAQA,OAAO,EACb,IAAK,QAAQ,CACX,MAAO,CAAAf,iBAAiB,CAC1B,IAAK,WAAW,CACd,MAAO,CAAAE,oBAAoB,CAC7B,IAAK,UAAU,CACb,MAAO,CAAAC,mBAAmB,CAC5B,IAAK,UAAU,CACb,MAAO,CAAAC,mBAAmB,CAC5B,IAAK,SAAS,CACZ,MAAO,CAAAC,kBAAkB,CAC3B,IAAK,SAAS,CACZ,MAAO,CAAAC,kBAAkB,CAC3B,QACE,MAAO,KAAI,CACf,CACF,CAAC,CAED,GAAM,CAAAU,KAAI,CAAG,QAAP,CAAAA,IAAIA,CAAIC,IAAI,CAAEC,OAAO,CAAK,CAC9B,GAAM,CAAAC,eAAe,IAAAC,cAAA,CAAAC,OAAA,KAAQH,OAAO,EAAED,IAAI,CAAJA,IAAI,EAAE,CAC5C,GAAM,CAAAK,WAAW,CAAGR,mBAAmB,CAACG,IAAI,CAAC,CAC7CK,WAAW,EACTA,WAAW,CAACd,OAAO,CAAC,SAAAI,IAAI,CAAI,CAC1BA,IAAI,CAACO,eAAe,CAAC,CACvB,CAAC,CAAC,CACN,CAAC,CAMD,GAAI,CAAAI,cAAc,CAAG3B,qBAAqB,CAE1C,GAAM,CAAA4B,cAAc,CAAG,CACrB,WAAW,CACX,UAAU,CACV,UAAU,CACV,SAAS,CACT,SAAS,CACT,QAAQ,CACT,CAED,GAAM,CAAAb,mBAAmB,CAAGa,cAAc,CAACC,GAAG,CAAC,SAAAC,SAAS,QACtD,CAAAhC,WAAW,CAACgC,SAAS,CAAE,SAAAR,OAAO,CAAI,CAChC,GAAIQ,SAAS,GAAK,SAAS,CAAE,CAC3BV,KAAI,CAACU,SAAS,CAAER,OAAO,CAAC,CACxB,OACF,CAAC,GAEO,CAAAS,KAAK,CAAwBT,OAAO,CAApCS,KAAK,CAAEC,SAAS,CAAaV,OAAO,CAA7BU,SAAS,CAAEC,MAAM,CAAKX,OAAO,CAAlBW,MAAM,CAChC,GAAM,CAAAC,UAAU,CAAGF,SAAS,EAAIA,SAAS,CAACG,MAAM,CAChD,GAAM,CAAAA,MAAM,CAAGJ,KAAK,EAAIA,KAAK,CAACI,MAAM,CAIpC,GAAM,CAAAC,QAAQ,CAAGD,MAAM,EAAIA,MAAM,CAACJ,KAAK,CAACM,KAAK,CAAC,CAACtC,GAAG,CAElD,GAAM,CAAAuC,cAAc,CAAGF,QAAQ,GAAKrC,GAAG,CACvC,GAAM,CAAAwC,SAAS,CACbL,UAAU,EAAIA,UAAU,CAACM,IAAI,CAAC,SAAAC,KAAK,QAAI,CAAAA,KAAK,CAAC1C,GAAG,GAAKA,GAAG,GAAC,CAC3D,GAAM,CAAA2C,QAAQ,CAAGP,MAAM,EAAIA,MAAM,CAACK,IAAI,CAAC,SAAAC,KAAK,QAAI,CAAAA,KAAK,CAAC1C,GAAG,GAAKA,GAAG,GAAC,CAClE,GAAM,CAAA4C,YAAY,CAAG,CACnBC,OAAO,CAAK7C,GAAG,KAAIkC,MAAM,CAACZ,IAAI,MAAIC,OAAO,CAACsB,OAAO,EAAI,MAAM,CAAE,CAC7Db,KAAK,CAAEW,QAAQ,CACfV,SAAS,CAAEO,SAAS,CACpBN,MAAM,CAANA,MAAM,CACNZ,IAAI,CAAES,SACR,CAAC,CACD,GAAM,CAAAe,eAAe,CAAG,CAAC,CAACd,KAAK,EAAIA,KAAK,CAACc,eAAe,CAExD,GAAM,CAAAC,wBAAwB,CAAGnB,cAAc,CAE/C,GAAIA,cAAc,GAAK,SAAS,CAAE,CAEhC,GAAIG,SAAS,GAAK,WAAW,EAAIQ,cAAc,CAAE,CAC/ClB,KAAI,CAAEO,cAAc,CAAG,WAAW,CAAGgB,YAAY,CAAC,CACpD,CAAC,IAAM,IAAIb,SAAS,GAAK,QAAQ,EAAIQ,cAAc,CAAE,CACnDlB,KAAI,CAAEO,cAAc,CAAG,WAAW,CAAGgB,YAAY,CAAC,CACpD,CACF,CACA,GAAIhB,cAAc,GAAK,WAAW,CAAE,CAGlC,GAAIG,SAAS,GAAK,UAAU,EAAIQ,cAAc,EAAI,CAACO,eAAe,CAAE,CAClEzB,KAAI,CAAEO,cAAc,CAAG,UAAU,CAAGgB,YAAY,CAAC,CACnD,CAAC,IAAM,IACLb,SAAS,GAAK,QAAQ,EACtBQ,cAAc,EACd,CAACO,eAAe,CAChB,CACAzB,KAAI,CAAEO,cAAc,CAAG,UAAU,CAAGgB,YAAY,CAAC,CACnD,CACF,CAEA,GAAIhB,cAAc,GAAK,UAAU,CAAE,CAEjC,GAAI,CAACW,cAAc,CAAE,CAEnBlB,KAAI,CAAEO,cAAc,CAAG,UAAU,CAAGgB,YAAY,CAAC,CACnD,CAAC,IAAM,IAAIb,SAAS,GAAK,UAAU,CAAE,CAEnCV,KAAI,CAAEO,cAAc,CAAG,UAAU,CAAGgB,YAAY,CAAC,CACnD,CAAC,IAAM,IACLb,SAAS,GAAK,QAAQ,EACtBgB,wBAAwB,GAAK,UAAU,CACvC,CAEA1B,KAAI,CAAC,QAAQ,CAAEuB,YAAY,CAAC,CAC9B,CACF,CAEA,GAAIhB,cAAc,GAAK,UAAU,CAAE,CAEjC,GAAIG,SAAS,GAAK,QAAQ,EAAI,CAACQ,cAAc,EAAI,CAACO,eAAe,CAAE,CAGjEzB,KAAI,CAAEO,cAAc,CAAG,SAAS,CAAGgB,YAAY,CAAC,CAClD,CAAC,IAAM,IAAIb,SAAS,GAAK,SAAS,CAAE,CAElCV,KAAI,CAAEO,cAAc,CAAG,SAAS,CAAGgB,YAAY,CAAC,CAClD,CAAC,IAAM,IACLb,SAAS,GAAK,QAAQ,EACtBQ,cAAc,EACd,CAACO,eAAe,CAChB,CACAzB,KAAI,CAAEO,cAAc,CAAG,UAAU,CAAGgB,YAAY,CAAC,CACnD,CAAC,IAAM,IACLb,SAAS,GAAK,QAAQ,EACtBQ,cAAc,EACdO,eAAe,CACf,CACAzB,KAAI,CAAEO,cAAc,CAAG,WAAW,CAAGgB,YAAY,CAAC,CACpD,CACF,CAEA,GAAIhB,cAAc,GAAK,SAAS,EAAI,CAACe,QAAQ,CAAE,CAC7C/B,SAAS,CAAC,CAAC,CACb,CACF,CAAC,CAAC,EACJ,CAAC,CAED,MAAO,CACLb,WAAW,UAAAA,YAACgC,SAAS,CAAEiB,YAAY,CAAE,CACnC,GAAM,CAAArB,WAAW,CAAGR,mBAAmB,CAACY,SAAS,CAAC,CAClD,GAAI,CAACJ,WAAW,CAAE,CAChB,KAAM,IAAI,CAAAsB,KAAK,yBAAwBlB,SAAS,KAAG,CAAC,CACtD,CACAJ,WAAW,CAACuB,GAAG,CAACF,YAAY,CAAC,CAC7B,GAAM,CAAA9B,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACnBS,WAAW,CAACwB,MAAM,CAACH,YAAY,CAAC,CAClC,CAAC,CACD,MAAO,CAAE9B,MAAM,CAANA,MAAO,CAAC,CACnB,CAAC,CACDG,IAAI,UAAAA,KAACU,SAAS,CAAER,OAAO,CAAE,CACvB,GAAIQ,SAAS,GAAK,SAAS,CAAE,CAC3BqB,OAAO,CAACC,KAAK,+DAEb,CAAC,CACD,OACF,CACAhC,KAAI,CAACU,SAAS,CAAER,OAAO,CAAC,CAC1B,CACF,CAAC,CACH"}